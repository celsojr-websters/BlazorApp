@page "/weather"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Weather</PageTitle>

<HeadContent>
    <meta name="description" content="A small description of some good content on this page" />
    <link rel="sitemap" type="application/xml" title="Sitemap" href="@(NavigationManager.BaseUri)sitemap.xml" />
    <link rel="alternate" type="application/rss+xml" href="@(NavigationManager.BaseUri)atom.xml">
    <link rel="canonical" href="@(NavigationManager.BaseUri)good-content" />
    <meta name="robots" content="index, follow" />
    <script type="application/ld+json">
        {
          "@@context": "https://schema.org/",
          "@@type": "Recipe",
          "name": "Party Coffee Cake",
          "author": {
            "@@type": "Person",
            "name": "Mary Stone"
          },
          "datePublished": "2018-03-10",
          "description": "This coffee cake is awesome and perfect for parties.",
          "prepTime": "PT20M"
        }
    </script>
</HeadContent>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
